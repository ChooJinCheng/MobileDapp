import 'package:flutter/material.dart';
import 'package:http/http.dart';
import 'package:web3dart/web3dart.dart';

class EthereumService {
  static final EthereumService _instance = EthereumService._internal();
  late String rpcUrl;
  late String privateKey;
  late Web3Client _client;
  late EthPrivateKey _credentials;

  EthereumService._internal();

  factory EthereumService({required String rpcUrl, required String privateKey}) {
    _instance.rpcUrl = rpcUrl;
    _instance.privateKey = privateKey;
    _instance._initialize();
    return _instance;
  }

  void _initialize() {
    _client = Web3Client(rpcUrl, Client());
    _credentials = EthPrivateKey.fromHex(privateKey);
  }

  Future<DeployedContract> loadContract(String abi, String contractAddress) async {
    final contract = DeployedContract(
      ContractAbi.fromJson(abi, 'MyContract'),
      EthereumAddress.fromHex(contractAddress),
    );
    return contract;
  }

  Future<List<dynamic>> query(
    DeployedContract contract,
    String functionName,
    List<dynamic> args,
  ) async {
    final ethFunction = contract.function(functionName);
    final result = await _client.call(
      contract: contract,
      function: ethFunction,
      params: args,
    );
    return result;
  }
}